.reset {
	position: relative;

	display: inline-block;
	vertical-align: baseline;

	padding: 0;
	margin: 0;

	line-height: inherit;
	font: inherit;

	text-align: center;
	text-decoration: none;
	text-transform: none;
	white-space: nowrap;
	letter-spacing: normal;
	color: inherit;

	background-color: transparent;
	border: none;

	outline: none;
	appearance: none;
	user-select: none;
	cursor: pointer;
}
:hover > .reset {
	text-decoration: inherit;
	color: inherit;
}

.button {
	composes: reset;

	font-family: $font.family.sans;
	background: #fff;

	transition-property: box-shadow, color, background-color, transform;
	transition-duration: 0.05s, 0.2s, 0.1s, 0.05s;
	transition-timing-function: cubic-bezier(0.64, 0, 0.35, 1);
}

/* variant: default */
.default {
	composes: button;

	box-shadow: 0 0 0 1px color($color.neutral.darker a(4%)),
		0 1px 0 color($color.neutral.darker a(6%)),
		0 1px 3px color($color.neutral.darker a(40%));
}
.default.hover,
:hover > .default {
	background-color: color($color.neutral.darker a(6%));
}
.default.active,
:active > .default {
	transform: translateY(1px);
	box-shadow: 0 0 0 1px color($color.neutral.darker a(4%)),
		0 1px 0 color($color.neutral.darker a(6%)),
		0 0 0 color($color.neutral.darker a(40%));
}
.default.focus,
:focus > .default {
	text-decoration: none;
	color: inherit;
	box-shadow: 0 0 0 3px color($color.accent a(20%)),
		0 0 1px 0 $color.neutral.darker,
		0 1px 3px color($color.neutral.darker a(20%));
}

/* variant: flat */
.flat {
	composes: button;

	background-color: #ffffff;
	background-color: $color.accent;
	background-image: linear-gradient(
		to bottom,
		color($color.neutral.lighter a(10%)),
		rgba(34, 102, 237, 0)
	);
	box-shadow: inset 0 0 0 transparent;
	transition: 0.125s box-shadow;
}
.flat.hover,
:hover > .flat {
	background-color: color($color.neutral.darker a(6%));
}
.flat.active,
:active > .flat {
	box-shadow: inset 0 1px 4px 0 color($color.neutral.darker a(20%));
}
.flat.focus,
:focus > .flat {
	text-decoration: none;
	color: inherit;
	box-shadow: 0 0 0 2px color($color.accent a(20%));
}

/* variant: plain */
.plain {
	composes: button;
}

/* variant: outlined */
.outlined {
	composes: button;
}

/* variant: raised */
.raised {
	composes: button;

	background-color: #ffffff;
	box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12), 0 2px 3px rgba(233, 237, 246, 0.12);
}
.raised.hover,
:hover > .raised {
	background-color: #edf1f7;
	box-shadow: 0 5px 9px rgba(0, 0, 0, 0.12), 0 2px 3px rgba(233, 237, 246, 0.12);
}
.raised.active,
:active > .raised {
	transform: translateY(1px);
	background-color: #ffffff;
	box-shadow: 0 1px 2px rgba(0, 0, 0, 0.12), 0 2px 3px rgba(233, 237, 246, 0.12);
}
.raised.focus,
:focus > .raised {
	text-decoration: none;
	color: inherit;
	box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12), 0 2px 3px rgba(233, 237, 246, 0.12),
		inset 0px 0px 0px 1px $color.accent;
}

/* sizes */
.small {
	padding: 0.33333334em 0.5em;
	text-transform: uppercase;
	font-size: 0.8rem;
	font-weight: 500;
	letter-spacing: 0.05rem;
}
.medium {
	padding: 0.33333334em 0.5em;
	font-size: 1.2rem;
}
.large {
	padding: 0.5em 0.75em;
	font-size: 1.4rem;
}
.xlarge {
	padding: 0.625em 1.25em;
	font-size: 1.6rem;
}

/* shapes */
.sharp {
	border-radius: 0;
}
.round {
	border-radius: 0.1875em;
}
.pill {
	border-radius: 10em;
}

/* modifiers */
:hover > .disabled,
:active > .disabled,
:focus > .disabled,
.disabled {
	opacity: 0.8;
	color: $color.neutral.dark;
	background-color: $color.neutral.lighter;
	box-shadow: 0 1px 3px rgba(91, 104, 115, 0.3);
	transform: none;
	cursor: not-allowed;
}

/* styles */
.primary {
	color: #ffffff;
	font-weight: bold;
	background-color: $color.primary;
}
.secondary {
	color: #ffffff;
	font-weight: bold;
	background-color: $color.secondary;
}
.accent {
	color: #ffffff;
	font-weight: bold;
	background-color: $color.accent;
}
.positive {
	color: $color.green.darker;
	background-color: $color.green.lighter;
}
.negative {
	color: $color.red.darker;
	background-color: $color.red.lighter;
}
